import streamlit as st
import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Set page configuration
st.set_page_config(
    page_title="Web Research Agent",
    page_icon="üîç",
    layout="wide"
)

# Header
st.title("üîç Web Research Agent")
st.markdown("A powerful web research tool that can search the web, analyze content, and create comprehensive reports.")

# Sidebar
with st.sidebar:
    st.header("About")
    st.markdown("""
    This tool uses AI agents to research topics on the web and compile comprehensive reports.
    
    It performs:
    - Web searches
    - Content extraction
    - Information analysis
    - Report generation
    """)
    
    # Check if API keys are available
    serper_key = os.environ.get("SERPER_API_KEY")
    nvidia_key = os.environ.get("NVIDIA_NIM_API_KEY")
    
    st.header("API Keys")
    if not serper_key or not nvidia_key:
        st.warning("‚ö†Ô∏è API keys are configured through Streamlit secrets.")
        st.info("Successfully loaded: " + 
                ("Serper API Key ‚úÖ" if serper_key else "Serper API Key ‚ùå") + ", " +
                ("NVIDIA NIM API Key ‚úÖ" if nvidia_key else "NVIDIA NIM API Key ‚ùå"))

# Main area
query = st.text_input("What would you like to research?", placeholder="Enter a research topic...")
search_button = st.button("Start Research", type="primary")

if search_button and query:
    if not serper_key or not nvidia_key:
        st.error("Missing API keys. Please configure them in Streamlit secrets.")
    else:
        with st.spinner("Agents are researching your topic... This may take a few minutes..."):
            # In a fully implemented version, we would call the CrewAI agents here
            # For now, we'll just provide a placeholder
            st.info("This is a placeholder for the Web Research Agent")
            st.success(f"Researching: {query}")
            
            # Example report
            st.subheader("Research Report")
            st.markdown("""
            # Research Report: """ + query + """
            
            ## Introduction
            This is a sample research report on the topic you requested. In the actual implementation, 
            this would be generated by CrewAI agents that search the web, analyze content, and 
            compile a comprehensive report.
            
            ## Key Findings
            1. Finding one related to your query
            2. Another important finding
            3. Additional relevant information
            
            ## Sources
            - Example.com
            - Research.org
            - News.com
            
            ## Conclusion
            This concludes the sample research report. In the full implementation, this would contain
            a synthesis of all the information gathered by the AI agents.
            """)
            
            # Option to download sample report
            st.download_button(
                label="Download Sample Report",
                data="""# Research Report: """ + query + """
                
## Introduction
This is a sample research report on the topic you requested. In the actual implementation, 
this would be generated by CrewAI agents that search the web, analyze content, and 
compile a comprehensive report.

## Key Findings
1. Finding one related to your query
2. Another important finding
3. Additional relevant information

## Sources
- Example.com
- Research.org
- News.com

## Conclusion
This concludes the sample research report. In the full implementation, this would contain
a synthesis of all the information gathered by the AI agents.
                """,
                file_name="sample_report.md",
                mime="text/markdown"
            )

# Footer
st.markdown("---")
st.markdown("Powered by CrewAI | Made with ‚ù§Ô∏è by AI enthusiasts") 